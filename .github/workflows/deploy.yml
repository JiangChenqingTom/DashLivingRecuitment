name: deploy to EC2

on:
  push:
    branches:
      - TomLocal
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Install Docker & Prepare Directories
        run: |
          ssh -t ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # 解决RHEL订阅和仓库兼容问题
            sudo rm -f /etc/yum.repos.d/docker-ce.repo
            sudo curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo
            sudo sed -i 's/$releasever/8/g' /etc/yum.repos.d/CentOS-Base.repo

            # 安装Docker依赖
            sudo yum install -y yum-utils device-mapper-persistent-data lvm2

            # 添加兼容的Docker仓库
            sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
            sudo sed -i 's/$releasever/8/g' /etc/yum.repos.d/docker-ce.repo

            # 安装Docker（允许替换冲突包）
            sudo yum install -y docker-ce docker-ce-cli containerd.io --allowerasing

            # 启动Docker并配置权限
            sudo systemctl enable --now docker
            sudo groupadd -f docker  # 确保docker组存在
            sudo usermod -aG docker $USER

            # 安装Docker Compose
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

            sudo mkdir -p /data/docker/mysql-data /data/docker/redis-data /home/ec2-user/dashliving
            sudo chmod -R 777 /data/docker /home/ec2-user/dashliving

            echo "验证Docker安装..."
            docker --version || { echo "Docker安装失败"; exit 1; }
          
            echo "验证Docker Compose安装..."
            docker-compose --version || { echo "Docker Compose安装失败"; exit 1; }
          
            echo "验证目录创建..."
            ls -ld /data/docker/mysql-data /data/docker/redis-data /home/ec2-user/dashliving || { echo "目录创建失败"; exit 1; }
          
            echo "环境准备完成"
          EOF

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker images
        run: |
          export TAG=${{ github.sha }}
          export DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            set +x
            echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
            set -x

            curl -o /home/ec2-user/dashliving/docker-compose.yml "https://raw.githubusercontent.com/JiangChenqingTom/DashLivingRecuitment/TomLocal/docker-compose.yml"

            cd /home/ec2-user/dashliving
            
            export DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}
            export TAG=${{ github.sha }}
            
            docker-compose pull

            docker-compose up -d

            docker system prune -af